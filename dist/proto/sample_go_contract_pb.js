/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var proto_loom_pb = require('../proto/loom_pb.js');
goog.exportSymbol('proto.SampleGoContractNestedEvmRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SampleGoContractNestedEvmRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SampleGoContractNestedEvmRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.SampleGoContractNestedEvmRequest.displayName = 'proto.SampleGoContractNestedEvmRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SampleGoContractNestedEvmRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.SampleGoContractNestedEvmRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SampleGoContractNestedEvmRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.SampleGoContractNestedEvmRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    innerEmitter: (f = msg.getInnerEmitter()) && proto_loom_pb.Address.toObject(includeInstance, f),
    outerEmitter: (f = msg.getOuterEmitter()) && proto_loom_pb.Address.toObject(includeInstance, f),
    innerEmitterValue: msg.getInnerEmitterValue(),
    outerEmitterValue: msg.getOuterEmitterValue()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SampleGoContractNestedEvmRequest}
 */
proto.SampleGoContractNestedEvmRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SampleGoContractNestedEvmRequest;
  return proto.SampleGoContractNestedEvmRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SampleGoContractNestedEvmRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SampleGoContractNestedEvmRequest}
 */
proto.SampleGoContractNestedEvmRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setInnerEmitter(value);
      break;
    case 2:
      var value = new proto_loom_pb.Address;
      reader.readMessage(value,proto_loom_pb.Address.deserializeBinaryFromReader);
      msg.setOuterEmitter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInnerEmitterValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOuterEmitterValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.SampleGoContractNestedEvmRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.SampleGoContractNestedEvmRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SampleGoContractNestedEvmRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.SampleGoContractNestedEvmRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getInnerEmitter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = this.getOuterEmitter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto_loom_pb.Address.serializeBinaryToWriter
    );
  }
  f = this.getInnerEmitterValue();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = this.getOuterEmitterValue();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.SampleGoContractNestedEvmRequest} The clone.
 */
proto.SampleGoContractNestedEvmRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.SampleGoContractNestedEvmRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional Address inner_emitter = 1;
 * @return {proto.Address}
 */
proto.SampleGoContractNestedEvmRequest.prototype.getInnerEmitter = function() {
  return /** @type{proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 1));
};


/** @param {proto.Address|undefined} value  */
proto.SampleGoContractNestedEvmRequest.prototype.setInnerEmitter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.SampleGoContractNestedEvmRequest.prototype.clearInnerEmitter = function() {
  this.setInnerEmitter(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.SampleGoContractNestedEvmRequest.prototype.hasInnerEmitter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Address outer_emitter = 2;
 * @return {proto.Address}
 */
proto.SampleGoContractNestedEvmRequest.prototype.getOuterEmitter = function() {
  return /** @type{proto.Address} */ (
    jspb.Message.getWrapperField(this, proto_loom_pb.Address, 2));
};


/** @param {proto.Address|undefined} value  */
proto.SampleGoContractNestedEvmRequest.prototype.setOuterEmitter = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.SampleGoContractNestedEvmRequest.prototype.clearOuterEmitter = function() {
  this.setOuterEmitter(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.SampleGoContractNestedEvmRequest.prototype.hasOuterEmitter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 inner_emitter_value = 3;
 * @return {number}
 */
proto.SampleGoContractNestedEvmRequest.prototype.getInnerEmitterValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.SampleGoContractNestedEvmRequest.prototype.setInnerEmitterValue = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 outer_emitter_value = 4;
 * @return {number}
 */
proto.SampleGoContractNestedEvmRequest.prototype.getOuterEmitterValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.SampleGoContractNestedEvmRequest.prototype.setOuterEmitterValue = function(value) {
  jspb.Message.setField(this, 4, value);
};


goog.object.extend(exports, proto);
